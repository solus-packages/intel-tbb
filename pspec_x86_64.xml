<PISI>
    <Source>
        <Name>intel-tbb</Name>
        <Packager>
            <Name>Joey Riches</Name>
            <Email>josephriches@gmail.com</Email>
        </Packager>
        <License>Apache-2.0</License>
        <PartOf>programming</PartOf>
        <Summary xml:lang="en">High level abstract threading library</Summary>
        <Description xml:lang="en">Intel(R) Threading Building Blocks (TBB) lets you easily write parallel C++ programs that take full advantage of multicore performance, that are portable, composable and have future-proof scalability.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://getsol.us/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>intel-tbb</Name>
        <Summary xml:lang="en">High level abstract threading library</Summary>
        <Description xml:lang="en">Intel(R) Threading Building Blocks (TBB) lets you easily write parallel C++ programs that take full advantage of multicore performance, that are portable, composable and have future-proof scalability.
</Description>
        <PartOf>programming</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/libtbb.so.2</Path>
            <Path fileType="library">/usr/lib64/libtbbmalloc.so.2</Path>
            <Path fileType="library">/usr/lib64/libtbbmalloc_proxy.so.2</Path>
        </Files>
    </Package>
    <Package>
        <Name>intel-tbb-32bit</Name>
        <Summary xml:lang="en">32-bit libraries for intel-tbb</Summary>
        <Description xml:lang="en">Intel(R) Threading Building Blocks (TBB) lets you easily write parallel C++ programs that take full advantage of multicore performance, that are portable, composable and have future-proof scalability.
</Description>
        <PartOf>emul32</PartOf>
        <RuntimeDependencies>
            <Dependency release="8">intel-tbb</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/cmake/TBB/TBBConfig.cmake</Path>
            <Path fileType="library">/usr/lib32/cmake/TBB/TBBConfigVersion.cmake</Path>
            <Path fileType="library">/usr/lib32/libtbb.so.2</Path>
            <Path fileType="library">/usr/lib32/libtbbmalloc.so.2</Path>
            <Path fileType="library">/usr/lib32/libtbbmalloc_proxy.so.2</Path>
        </Files>
    </Package>
    <Package>
        <Name>intel-tbb-32bit-devel</Name>
        <Summary xml:lang="en">Development files for 32-bit intel-tbb</Summary>
        <Description xml:lang="en">Intel(R) Threading Building Blocks (TBB) lets you easily write parallel C++ programs that take full advantage of multicore performance, that are portable, composable and have future-proof scalability.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="8">intel-tbb-devel</Dependency>
            <Dependency release="8">intel-tbb-32bit</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/libtbb.so</Path>
            <Path fileType="library">/usr/lib32/libtbbmalloc.so</Path>
            <Path fileType="library">/usr/lib32/libtbbmalloc_proxy.so</Path>
        </Files>
    </Package>
    <Package>
        <Name>intel-tbb-devel</Name>
        <Summary xml:lang="en">Development files for intel-tbb</Summary>
        <Description xml:lang="en">Intel(R) Threading Building Blocks (TBB) lets you easily write parallel C++ programs that take full advantage of multicore performance, that are portable, composable and have future-proof scalability.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="8">intel-tbb</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="header">/usr/include/tbb/aggregator.h</Path>
            <Path fileType="header">/usr/include/tbb/aligned_space.h</Path>
            <Path fileType="header">/usr/include/tbb/atomic.h</Path>
            <Path fileType="header">/usr/include/tbb/blocked_range.h</Path>
            <Path fileType="header">/usr/include/tbb/blocked_range2d.h</Path>
            <Path fileType="header">/usr/include/tbb/blocked_range3d.h</Path>
            <Path fileType="header">/usr/include/tbb/blocked_rangeNd.h</Path>
            <Path fileType="header">/usr/include/tbb/cache_aligned_allocator.h</Path>
            <Path fileType="header">/usr/include/tbb/combinable.h</Path>
            <Path fileType="header">/usr/include/tbb/compat/condition_variable</Path>
            <Path fileType="header">/usr/include/tbb/compat/ppl.h</Path>
            <Path fileType="header">/usr/include/tbb/compat/thread</Path>
            <Path fileType="header">/usr/include/tbb/compat/tuple</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_hash_map.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_lru_cache.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_map.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_priority_queue.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_queue.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_set.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_unordered_map.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_unordered_set.h</Path>
            <Path fileType="header">/usr/include/tbb/concurrent_vector.h</Path>
            <Path fileType="header">/usr/include/tbb/critical_section.h</Path>
            <Path fileType="header">/usr/include/tbb/enumerable_thread_specific.h</Path>
            <Path fileType="header">/usr/include/tbb/flow_graph.h</Path>
            <Path fileType="header">/usr/include/tbb/flow_graph_abstractions.h</Path>
            <Path fileType="header">/usr/include/tbb/flow_graph_opencl_node.h</Path>
            <Path fileType="header">/usr/include/tbb/global_control.h</Path>
            <Path fileType="header">/usr/include/tbb/index.html</Path>
            <Path fileType="header">/usr/include/tbb/info.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_aggregator_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_allocator_traits.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_concurrent_queue_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_concurrent_skip_list_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_concurrent_unordered_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_deprecated_header_message_guard.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_async_msg_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_body_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_cache_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_indexer_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_item_buffer_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_join_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_node_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_node_set_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_nodes_deduction.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_streaming_node.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_tagged_buffer_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_trace_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_flow_graph_types_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_mutex_padding.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_node_handle_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_range_iterator.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_tbb_hash_compare_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_tbb_strings.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_tbb_trace_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_tbb_windef.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_template_helpers.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_warning_suppress_disable_notice.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_warning_suppress_enable_notice.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_x86_eliding_mutex_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/internal/_x86_rtm_rw_mutex_impl.h</Path>
            <Path fileType="header">/usr/include/tbb/iterators.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/gcc_arm.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/gcc_generic.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/gcc_ia32_common.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/gcc_itsx.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/ibm_aix51.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/icc_generic.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/linux_common.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/linux_ia32.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/linux_ia64.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/linux_intel64.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/mac_ppc.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/macos_common.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/mic_common.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/msvc_armv7.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/msvc_ia32_common.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/sunos_sparc.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/windows_api.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/windows_ia32.h</Path>
            <Path fileType="header">/usr/include/tbb/machine/windows_intel64.h</Path>
            <Path fileType="header">/usr/include/tbb/memory_pool.h</Path>
            <Path fileType="header">/usr/include/tbb/mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/null_mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/null_rw_mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_do.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_for.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_for_each.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_invoke.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_reduce.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_scan.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_sort.h</Path>
            <Path fileType="header">/usr/include/tbb/parallel_while.h</Path>
            <Path fileType="header">/usr/include/tbb/partitioner.h</Path>
            <Path fileType="header">/usr/include/tbb/pipeline.h</Path>
            <Path fileType="header">/usr/include/tbb/queuing_mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/queuing_rw_mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/reader_writer_lock.h</Path>
            <Path fileType="header">/usr/include/tbb/recursive_mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/runtime_loader.h</Path>
            <Path fileType="header">/usr/include/tbb/scalable_allocator.h</Path>
            <Path fileType="header">/usr/include/tbb/spin_mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/spin_rw_mutex.h</Path>
            <Path fileType="header">/usr/include/tbb/task.h</Path>
            <Path fileType="header">/usr/include/tbb/task_arena.h</Path>
            <Path fileType="header">/usr/include/tbb/task_group.h</Path>
            <Path fileType="header">/usr/include/tbb/task_scheduler_init.h</Path>
            <Path fileType="header">/usr/include/tbb/task_scheduler_observer.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_allocator.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_config.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_disable_exceptions.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_exception.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_machine.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_profiling.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_stddef.h</Path>
            <Path fileType="header">/usr/include/tbb/tbb_thread.h</Path>
            <Path fileType="header">/usr/include/tbb/tbbmalloc_proxy.h</Path>
            <Path fileType="header">/usr/include/tbb/tick_count.h</Path>
            <Path fileType="library">/usr/lib64/cmake/TBB/TBBConfig.cmake</Path>
            <Path fileType="library">/usr/lib64/cmake/TBB/TBBConfigVersion.cmake</Path>
            <Path fileType="library">/usr/lib64/libtbb.so</Path>
            <Path fileType="library">/usr/lib64/libtbbmalloc.so</Path>
            <Path fileType="library">/usr/lib64/libtbbmalloc_proxy.so</Path>
        </Files>
    </Package>
    <History>
        <Update release="8">
            <Date>2021-07-12</Date>
            <Version>2020.3</Version>
            <Comment>Packaging update</Comment>
            <Name>Joey Riches</Name>
            <Email>josephriches@gmail.com</Email>
        </Update>
    </History>
</PISI>